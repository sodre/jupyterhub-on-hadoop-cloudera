#
# Cloudera's Custom Service Descritor file
#
# See https://github.com/cloudera/cm_ext/wiki/Service-Descriptor-Language-Reference definition of each item.
name: JUPYTERHUB
label: JupyterHub
description: |
  JupyterHub, a multi-user Hub, spawns, manages, and proxies
  multiple instances of the single-user Jupyter notebook server
version: 0.1.0

compatibility:
  cdhVersion:
    max: '5'
    min: 5.7.0

icon: images/icon.png

inExpressWizard: true

runAs:
  user: jupyterhub
  group: jupyterhub
  principal: jupyterhub

maxInstances: 1

parcel:
  #repoUrl: https://github.com/nomr/pki-parcel/releases/download/v1.2.0+0.0.5
  #additionalRepoUrls:
  requiredTags:
  - jupyterhub

serviceDependencies:
- name: HDFS
- name: YARN

#hdfsDirs:
#- name: CreateHDFSHomeCommand
#  label: Create JupyterHub's HDFS Directory
#  description: This command creates the home directory for JupyterHub
#  directoryDescription: The home directory for JupyterHub
#  path: "/user/${user}"
#  permissions: "0750"

#- name: CreateHDFSCondaEnvRepoCommand
#  label: Create JupyterHub's Conda Environment Repository
#  description: This command creates a directory to store packaged conda environments.
#  directoryDescription: A directory to store conda environments from conda-pack
#  path: "/user/${user}/conda"
#  permissions: "0755"

#serviceInit:
#  preStartSteps:
#    - commandName: CreateHDFSHomeCommand
#    - commandName: CreateHDFSCondaEnvRepoCommand

rollingRestart:
  workerSteps:
    roleName: JUPYTERHUB_HUB
    bringDownCommands:
      - Stop
    bringUpCommands:
      - Start

rolesWithExternalLinks:
- JUPYTERHUB_PROXY

keberos: true

# The Service Level Commands
#commands:

# The Service Level Parameters
parameters:
- name: configproxy_auth_token
  configName: CONFIGPROXY_AUTH_TOKEN
  label: The Configurable Proxy Authentication Token (in base64)
  description: The token to prevent MITM attacks.
  required: true
  configurableInWizard: true
  sensitive: true
  type: password
  conformRegex: '^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$'
  initType: randomBase64

roles:
- name: JUPYTERHUB_PROXY
  label: Configurable Proxy
  pluralLabel: Configurable Proxies

  externalLink:
    name: node_http_proxy
    label: JupyterHub UI
    url: 'http://${host}:${proxy_port}'

  startRunner:
    environmentVariables:
      CONFIGPROXY_AUTH_TOKEN: ${configproxy_auth_token}
    program: scripts/start-proxy.sh

  commands:

  topology:
    maxInstances: 1
    minInstances: 0
    placementRules:
    - type: alwaysWith
      roleType: JUPYTERHUB_HUB


  parameters:
  - name: proxy_port
    configName: --port
    label: Public-facing port of the proxy
    description: Public-facing port of the proxy
    required: true
    type: port
    min: 1024
    default: 8000
    configurableInWizard: true

  - name: proxy_api_port
    configName: --api-port
    label: Inward-facing port for API requests
    description: Inward-facing port for API requests
    required: false
    type: port
    min: 1024
    default: 8001

  configWriter:
    generators:
    - filename: node-http-proxy.gflags
      configFormat: gflags
      includedParams:
      - proxy_port
      - proxy_api_port

- name: JUPYTERHUB_HUB
  label: Hub
  pluralLabel: Hub

  startRunner:
    environmentVariables:
      CONFIGPROXY_AUTH_TOKEN: ${configproxy_auth_token}
      JPY_COOKIE_SECRET: ${jpy_cookie_secret}
    program: scripts/start-hub.sh

  topology:
    maxInstances: 1
    minInstances: 1

  parameters:
  # TODO: Convert db_url into kwargs version, so we can support different schemes, username and passwords
  - name: jpy_db_url
    configName: c.JupyterHub.db_url
    label: URL for the database
    description: URL for the database, e.g. `sqlite:///jupyterhub.sqlite`
    required: true
    configurableInWizard: false
    sensitive: false
    type: uri
    default: sqlite:////var/lib/jupyterhub/jupyterhub.sqlite

  - name: jpy_cookie_secret
    configName: c.JupyterHub.cookie_secret
    label: JupyterHub Cookie Secret
    description: The cookie secret to use to encrypt cookies.
    required: true
    configurableInWizard: true
    sensitive: true
    type: password
    conformRegex: '^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$'
    initType: randomBase64

  - name: jpy_answer_yes
    configName: --y
    label: Answer yes to any question
    description: Answer yes to any question (e.g. confirm overwrite)
    required: true
    type: boolean
    default: False

  configWriter:
    generators:
    - filename: hub.gflags
      configFormat: gflags
      includedParams:
      - jpy_answer_yes
      excludedParams:
      - configproxy_auth_token
      - jpy_cookie_secret
      additionalConfigs:
      - key: --config
        value: jupyterhub_config.py

    - filename: jupyterhub_config.py
      configFormat: properties
      excludedParams:
      - configproxy_auth_token
      - jpy_cookie_secret
      - jpy_answer_yes
      additionalConfigs:
      - key: c.Proxy.should_start
        value: "False"
